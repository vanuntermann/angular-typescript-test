if(typeof(usig)=="undefined"){usig={}}usig.Mock=function(b){var a={};a.__expectations={};a.expect=function(d){var c=d.method;a.__expectations[c]=d;d.actualCallCount=0;d.errors=[];a[c]=function(){if(d.args){var e=d.args[d.actualCallCount];if(e.length!=arguments.length){d.errors.push("Method "+c+"() passed incorrect number of arguments.")}for(var f=0;f<e.length;f++){if(e[f]!=arguments[f]){d.errors.push("Argument "+f+" ("+arguments[f]+") was not what we expected ("+e[f]+") on call number: "+(d.actualCallCount+1))}}}d.actualCallCount++;if(d.returns){return d.returns[d.actualCallCount-1]}}};a.verify=function(){if(b){try{b.Object.each(a.__expectations,function(f){if(f.method&&f.callCount){b.Assert.areEqual(f.callCount,f.actualCallCount,"Method "+f.method+"() wasn't called the expected number of times.");b.Object.each(f.errors,function(g){b.Assert.fail(g)})}else{if(f.property){b.Assert.areEqual(f.value,a[f.property],"Property "+f.property+" wasn't set to the correct value.")}}})}catch(e){b.Test.Runner._handleError(e)}}else{var d=true;for(var c in a.__expectations){d=d&&(!a.__expectations[c].callCount||a.__expectations[c].actualCallCount==a.__expectations[c].callCount)}return d}};return a};